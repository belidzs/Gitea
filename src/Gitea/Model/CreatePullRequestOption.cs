/* 
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = Gitea.Client.OpenAPIDateConverter;

namespace Gitea.Model
{
    /// <summary>
    /// CreatePullRequestOption options when creating a pull request
    /// </summary>
    [DataContract]
    public partial class CreatePullRequestOption :  IEquatable<CreatePullRequestOption>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreatePullRequestOption" /> class.
        /// </summary>
        /// <param name="assignee">assignee.</param>
        /// <param name="assignees">assignees.</param>
        /// <param name="_base">_base.</param>
        /// <param name="body">body.</param>
        /// <param name="dueDate">dueDate.</param>
        /// <param name="head">head.</param>
        /// <param name="labels">labels.</param>
        /// <param name="milestone">milestone.</param>
        /// <param name="title">title.</param>
        public CreatePullRequestOption(string assignee = default(string), List<string> assignees = default(List<string>), string _base = default(string), string body = default(string), DateTime dueDate = default(DateTime), string head = default(string), List<long> labels = default(List<long>), long milestone = default(long), string title = default(string))
        {
            this.Assignee = assignee;
            this.Assignees = assignees;
            this.Base = _base;
            this.Body = body;
            this.DueDate = dueDate;
            this.Head = head;
            this.Labels = labels;
            this.Milestone = milestone;
            this.Title = title;
        }
        
        /// <summary>
        /// Gets or Sets Assignee
        /// </summary>
        [DataMember(Name="assignee", EmitDefaultValue=false)]
        public string Assignee { get; set; }

        /// <summary>
        /// Gets or Sets Assignees
        /// </summary>
        [DataMember(Name="assignees", EmitDefaultValue=false)]
        public List<string> Assignees { get; set; }

        /// <summary>
        /// Gets or Sets Base
        /// </summary>
        [DataMember(Name="base", EmitDefaultValue=false)]
        public string Base { get; set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [DataMember(Name="body", EmitDefaultValue=false)]
        public string Body { get; set; }

        /// <summary>
        /// Gets or Sets DueDate
        /// </summary>
        [DataMember(Name="due_date", EmitDefaultValue=false)]
        public DateTime DueDate { get; set; }

        /// <summary>
        /// Gets or Sets Head
        /// </summary>
        [DataMember(Name="head", EmitDefaultValue=false)]
        public string Head { get; set; }

        /// <summary>
        /// Gets or Sets Labels
        /// </summary>
        [DataMember(Name="labels", EmitDefaultValue=false)]
        public List<long> Labels { get; set; }

        /// <summary>
        /// Gets or Sets Milestone
        /// </summary>
        [DataMember(Name="milestone", EmitDefaultValue=false)]
        public long Milestone { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreatePullRequestOption {\n");
            sb.Append("  Assignee: ").Append(Assignee).Append("\n");
            sb.Append("  Assignees: ").Append(Assignees).Append("\n");
            sb.Append("  Base: ").Append(Base).Append("\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  DueDate: ").Append(DueDate).Append("\n");
            sb.Append("  Head: ").Append(Head).Append("\n");
            sb.Append("  Labels: ").Append(Labels).Append("\n");
            sb.Append("  Milestone: ").Append(Milestone).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreatePullRequestOption);
        }

        /// <summary>
        /// Returns true if CreatePullRequestOption instances are equal
        /// </summary>
        /// <param name="input">Instance of CreatePullRequestOption to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreatePullRequestOption input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Assignee == input.Assignee ||
                    (this.Assignee != null &&
                    this.Assignee.Equals(input.Assignee))
                ) && 
                (
                    this.Assignees == input.Assignees ||
                    this.Assignees != null &&
                    input.Assignees != null &&
                    this.Assignees.SequenceEqual(input.Assignees)
                ) && 
                (
                    this.Base == input.Base ||
                    (this.Base != null &&
                    this.Base.Equals(input.Base))
                ) && 
                (
                    this.Body == input.Body ||
                    (this.Body != null &&
                    this.Body.Equals(input.Body))
                ) && 
                (
                    this.DueDate == input.DueDate ||
                    (this.DueDate != null &&
                    this.DueDate.Equals(input.DueDate))
                ) && 
                (
                    this.Head == input.Head ||
                    (this.Head != null &&
                    this.Head.Equals(input.Head))
                ) && 
                (
                    this.Labels == input.Labels ||
                    this.Labels != null &&
                    input.Labels != null &&
                    this.Labels.SequenceEqual(input.Labels)
                ) && 
                (
                    this.Milestone == input.Milestone ||
                    (this.Milestone != null &&
                    this.Milestone.Equals(input.Milestone))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Assignee != null)
                    hashCode = hashCode * 59 + this.Assignee.GetHashCode();
                if (this.Assignees != null)
                    hashCode = hashCode * 59 + this.Assignees.GetHashCode();
                if (this.Base != null)
                    hashCode = hashCode * 59 + this.Base.GetHashCode();
                if (this.Body != null)
                    hashCode = hashCode * 59 + this.Body.GetHashCode();
                if (this.DueDate != null)
                    hashCode = hashCode * 59 + this.DueDate.GetHashCode();
                if (this.Head != null)
                    hashCode = hashCode * 59 + this.Head.GetHashCode();
                if (this.Labels != null)
                    hashCode = hashCode * 59 + this.Labels.GetHashCode();
                if (this.Milestone != null)
                    hashCode = hashCode * 59 + this.Milestone.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                return hashCode;
            }
        }
    }

}
