/* 
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = Gitea.Client.OpenAPIDateConverter;

namespace Gitea.Model
{
    /// <summary>
    /// PullReviewComment represents a comment on a pull request review
    /// </summary>
    [DataContract]
    public partial class PullReviewComment :  IEquatable<PullReviewComment>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PullReviewComment" /> class.
        /// </summary>
        /// <param name="body">body.</param>
        /// <param name="commitId">commitId.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="diffHunk">diffHunk.</param>
        /// <param name="htmlUrl">htmlUrl.</param>
        /// <param name="id">id.</param>
        /// <param name="originalCommitId">originalCommitId.</param>
        /// <param name="originalPosition">originalPosition.</param>
        /// <param name="path">path.</param>
        /// <param name="position">position.</param>
        /// <param name="pullRequestReviewId">pullRequestReviewId.</param>
        /// <param name="pullRequestUrl">pullRequestUrl.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="user">user.</param>
        public PullReviewComment(string body = default(string), string commitId = default(string), DateTime createdAt = default(DateTime), string diffHunk = default(string), string htmlUrl = default(string), long id = default(long), string originalCommitId = default(string), int originalPosition = default(int), string path = default(string), int position = default(int), long pullRequestReviewId = default(long), string pullRequestUrl = default(string), DateTime updatedAt = default(DateTime), User user = default(User))
        {
            this.Body = body;
            this.CommitId = commitId;
            this.CreatedAt = createdAt;
            this.DiffHunk = diffHunk;
            this.HtmlUrl = htmlUrl;
            this.Id = id;
            this.OriginalCommitId = originalCommitId;
            this.OriginalPosition = originalPosition;
            this.Path = path;
            this.Position = position;
            this.PullRequestReviewId = pullRequestReviewId;
            this.PullRequestUrl = pullRequestUrl;
            this.UpdatedAt = updatedAt;
            this.User = user;
        }
        
        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [DataMember(Name="body", EmitDefaultValue=false)]
        public string Body { get; set; }

        /// <summary>
        /// Gets or Sets CommitId
        /// </summary>
        [DataMember(Name="commit_id", EmitDefaultValue=false)]
        public string CommitId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets DiffHunk
        /// </summary>
        [DataMember(Name="diff_hunk", EmitDefaultValue=false)]
        public string DiffHunk { get; set; }

        /// <summary>
        /// Gets or Sets HtmlUrl
        /// </summary>
        [DataMember(Name="html_url", EmitDefaultValue=false)]
        public string HtmlUrl { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets OriginalCommitId
        /// </summary>
        [DataMember(Name="original_commit_id", EmitDefaultValue=false)]
        public string OriginalCommitId { get; set; }

        /// <summary>
        /// Gets or Sets OriginalPosition
        /// </summary>
        [DataMember(Name="original_position", EmitDefaultValue=false)]
        public int OriginalPosition { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name="path", EmitDefaultValue=false)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=false)]
        public int Position { get; set; }

        /// <summary>
        /// Gets or Sets PullRequestReviewId
        /// </summary>
        [DataMember(Name="pull_request_review_id", EmitDefaultValue=false)]
        public long PullRequestReviewId { get; set; }

        /// <summary>
        /// Gets or Sets PullRequestUrl
        /// </summary>
        [DataMember(Name="pull_request_url", EmitDefaultValue=false)]
        public string PullRequestUrl { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public User User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PullReviewComment {\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  CommitId: ").Append(CommitId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  DiffHunk: ").Append(DiffHunk).Append("\n");
            sb.Append("  HtmlUrl: ").Append(HtmlUrl).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OriginalCommitId: ").Append(OriginalCommitId).Append("\n");
            sb.Append("  OriginalPosition: ").Append(OriginalPosition).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  PullRequestReviewId: ").Append(PullRequestReviewId).Append("\n");
            sb.Append("  PullRequestUrl: ").Append(PullRequestUrl).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PullReviewComment);
        }

        /// <summary>
        /// Returns true if PullReviewComment instances are equal
        /// </summary>
        /// <param name="input">Instance of PullReviewComment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PullReviewComment input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Body == input.Body ||
                    (this.Body != null &&
                    this.Body.Equals(input.Body))
                ) && 
                (
                    this.CommitId == input.CommitId ||
                    (this.CommitId != null &&
                    this.CommitId.Equals(input.CommitId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.DiffHunk == input.DiffHunk ||
                    (this.DiffHunk != null &&
                    this.DiffHunk.Equals(input.DiffHunk))
                ) && 
                (
                    this.HtmlUrl == input.HtmlUrl ||
                    (this.HtmlUrl != null &&
                    this.HtmlUrl.Equals(input.HtmlUrl))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.OriginalCommitId == input.OriginalCommitId ||
                    (this.OriginalCommitId != null &&
                    this.OriginalCommitId.Equals(input.OriginalCommitId))
                ) && 
                (
                    this.OriginalPosition == input.OriginalPosition ||
                    (this.OriginalPosition != null &&
                    this.OriginalPosition.Equals(input.OriginalPosition))
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.Position == input.Position ||
                    (this.Position != null &&
                    this.Position.Equals(input.Position))
                ) && 
                (
                    this.PullRequestReviewId == input.PullRequestReviewId ||
                    (this.PullRequestReviewId != null &&
                    this.PullRequestReviewId.Equals(input.PullRequestReviewId))
                ) && 
                (
                    this.PullRequestUrl == input.PullRequestUrl ||
                    (this.PullRequestUrl != null &&
                    this.PullRequestUrl.Equals(input.PullRequestUrl))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Body != null)
                    hashCode = hashCode * 59 + this.Body.GetHashCode();
                if (this.CommitId != null)
                    hashCode = hashCode * 59 + this.CommitId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.DiffHunk != null)
                    hashCode = hashCode * 59 + this.DiffHunk.GetHashCode();
                if (this.HtmlUrl != null)
                    hashCode = hashCode * 59 + this.HtmlUrl.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.OriginalCommitId != null)
                    hashCode = hashCode * 59 + this.OriginalCommitId.GetHashCode();
                if (this.OriginalPosition != null)
                    hashCode = hashCode * 59 + this.OriginalPosition.GetHashCode();
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                if (this.Position != null)
                    hashCode = hashCode * 59 + this.Position.GetHashCode();
                if (this.PullRequestReviewId != null)
                    hashCode = hashCode * 59 + this.PullRequestReviewId.GetHashCode();
                if (this.PullRequestUrl != null)
                    hashCode = hashCode * 59 + this.PullRequestUrl.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                return hashCode;
            }
        }
    }

}
